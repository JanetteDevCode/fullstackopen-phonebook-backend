{"version":3,"sources":["components/PersonForm.js","components/Person.js","components/Persons.js","components/Filter.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["PersonForm","props","onSubmit","handleAddPerson","placeholder","value","newName","onChange","changeName","newPhone","changePhone","type","Person","person","handleDeletePerson","name","phone","onClick","Persons","filter","persons","term","searchTerm","trim","toLowerCase","includes","map","key","showPersons","Filter","changeFilter","NotificationType","Object","freeze","SUCCESS","Symbol","INFO","ERROR","Notification","notification","notificationStyle","fontSize","borderStyle","borderRadius","padding","marginBottom","color","background","style","message","baseUrl","axios","get","then","response","console","log","data","newPerson","post","editedPerson","put","id","removablePerson","delete","App","useState","setPersons","setNewName","setNewPhone","setNewFilter","setNotification","timer","setTimer","useEffect","getAllPersons","displayNotification","clearTimeout","setTimeout","personService","catch","error","event","target","preventDefault","existingPerson","find","personExists","personToAdd","personToUpdate","window","confirm","returnedPerson","concat","personToDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.89b131b9.chunk.js","sourcesContent":["import React from 'react';\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.handleAddPerson}>\n      <div>\n        name: <input placeholder='Jane Doe' value={props.newName} onChange={props.changeName} />\n      </div>\n      <div>\n        number: <input placeholder='555-867-5309' value={props.newPhone} onChange={props.changePhone} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;","import React from 'react';\n\nconst Person = ({ person, handleDeletePerson }) => {\n  return (\n    <div>\n      {person.name} {person.phone} <button onClick={handleDeletePerson(person)}>delete</button>\n    </div>\n  );\n};\n\nexport default Person;","import React from 'react';\nimport Person from './Person';\n\nconst Persons = ({ filter, persons, handleDeletePerson }) => {\n  // case-insensitive filter\n  const filterPersons = (term) => {\n    return persons.filter((person) => {\n      return person.name.toLowerCase().includes(term.toLowerCase());\n    });\n  };\n\n  const showPersons = () => {\n    const searchTerm = filter.trim();\n    const personsToShow = searchTerm ? filterPersons(searchTerm) : persons;\n    return personsToShow.map((person) => {\n      return (\n        <Person \n          key={person.name} \n          person={person} \n          handleDeletePerson={handleDeletePerson} />\n      );\n    });\n  };\n\n  return (\n    <div>{showPersons()}</div>\n  );\n};\n\nexport default Persons;","import React from 'react';\n\nconst Filter = ({ filter, changeFilter }) => {\n  return (\n    <div>\n      filter shown with <input value={filter} onChange={changeFilter} />\n    </div>\n  );\n};\n\nexport default Filter;","import React from 'react';\n\nexport const NotificationType = Object.freeze({\n  SUCCESS: Symbol(\"success\"),\n  INFO: Symbol(\"info\"),\n  ERROR: Symbol(\"error\")\n});\n\nconst Notification = ({ notification }) => {\n  if (notification === null) {\n    return null;\n  }\n\n  let notificationStyle = {\n    fontSize: 20,\n    borderStyle: 'solid',\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 15\n  };\n\n  if (notification.type === NotificationType.SUCCESS) {\n    notificationStyle.color = 'green';\n    notificationStyle.background = 'lightgreen';\n  } else if (notification.type === NotificationType.ERROR) {\n    notificationStyle.color = 'crimson';\n    notificationStyle.background = 'pink';\n  } else if (notification.type === NotificationType.INFO) {\n    notificationStyle.color = 'gold';\n    notificationStyle.background = 'lightyellow';\n  }\n\n  return (\n    <div style={notificationStyle}>\n      {notification.message}\n    </div>\n  );\n};\n\nexport default Notification;","import axios from 'axios';\n\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  return (\n    axios\n      .get(baseUrl)\n      .then((response) => {\n        console.log('get all persons successful');\n        console.log('response data', response.data);\n        return response.data;\n      })\n  );\n};\n\nconst createPerson = (newPerson) => {\n  return (\n    axios\n      .post(baseUrl, newPerson)\n      .then((response) => {\n        console.log('create person successful');\n        console.log('response data', response.data);\n        return response.data;\n      })\n  );\n};\n\nconst updatePerson = (editedPerson) => {\n  return (\n    axios\n      .put(`${baseUrl}/${editedPerson.id}`, editedPerson)\n      .then((response) => {\n        console.log('update person successful');\n        console.log('response data', response.data);\n        return response.data;\n      })\n  );\n}\n\nconst deletePerson = (removablePerson) => {\n  return (\n    axios\n      .delete(`${baseUrl}/${removablePerson.id}`)\n      .then((response) => {\n        console.log('delete person successful');\n        console.log('response data', response.data);\n        return response.data;\n      })\n  );\n};\n\nexport default {\n  getAll,\n  createPerson,\n  updatePerson,\n  deletePerson\n};","import React, { useState, useEffect } from 'react';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Filter from './components/Filter';\nimport Notification, { NotificationType } from './components/Notification';\nimport personService from './services/persons';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newPhone, setNewPhone] = useState('');\n  const [filter, setNewFilter] = useState('');\n  const [notification, setNotification] = useState(null);\n  const [timer, setTimer] = useState(null);\n\n  useEffect(() => {\n    getAllPersons();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const displayNotification = (type, message) => {\n    setNotification({\n      type: type,\n      message: message\n    });\n    clearTimeout(timer);\n    setTimer(\n      setTimeout(() => {\n        setNotification(null);\n      }, 5000)\n    );\n  };\n\n  const getAllPersons = () => {\n    personService\n      .getAll()\n      .then((persons) => {\n        setPersons(persons);\n      })\n      .catch((error) => {\n        console.log('get all persons error:', error);\n        displayNotification(\n          NotificationType.ERROR,\n          'Could not get persons from the server.'\n        );\n      });\n  };\n\n  const personExists = (name) => {\n    return persons.find((person) => {\n      return person.name.toLowerCase() === name.toLowerCase();\n    });\n  };\n\n  const addPerson = (personToAdd) => {\n    personService\n      .createPerson(personToAdd)\n      .then((returnedPerson) => {\n        setPersons(persons.concat(returnedPerson));\n        displayNotification(\n          NotificationType.SUCCESS, \n          `${returnedPerson.name} was successfully added to the server.`\n        );\n      })\n      .catch((error) => {\n        console.log('add person error:', error);\n        displayNotification(\n          NotificationType.ERROR,\n          `${personToAdd.name} could not be added to the server.`\n        )\n      });\n  }\n  \n  const updatePerson = (personToUpdate) => {\n    personService\n      .updatePerson(personToUpdate)\n      .then((returnedPerson) => {\n        setPersons(persons.map((person) => {\n          return personToUpdate.id !== person.id ? person : returnedPerson;\n        }));\n        displayNotification(\n          NotificationType.SUCCESS,\n          `${returnedPerson.name} was successfully updated on the server.`\n        );\n      })\n      .catch((error) => {\n        console.log('update person error:', error);\n        setPersons(persons.filter((person) => {\n          return personToUpdate.id !== person.id;\n        }));\n        displayNotification(\n          NotificationType.ERROR,\n          `${personToUpdate.name} could not be updated since the person does not exist on the server.`\n        );\n      });\n  };\n\n  const deletePerson = (personToDelete) => {\n    personService\n      .deletePerson(personToDelete)\n      .then((returnedPerson) => {\n        setPersons(persons.filter((person) => {\n          return personToDelete.id !== person.id;\n        }));\n        displayNotification(\n          NotificationType.SUCCESS,\n          `${personToDelete.name} was successfully deleted from the server.`\n        );\n      })\n      .catch((error) => {\n        console.log('delete person error:', error);\n        setPersons(persons.filter((person) => {\n          return personToDelete.id !== person.id;\n        }));\n        displayNotification(\n          NotificationType.ERROR,\n          `${personToDelete.name} was already deleted from the server.`\n        );\n      });\n  };\n\n  const handleAddPerson = (event) => {\n    event.preventDefault();\n    const name = newName.trim();\n    const phone = newPhone.trim();\n    const existingPerson = personExists(name);\n    if (!name) {\n      displayNotification(\n        NotificationType.ERROR,\n        'No name was given.'\n      );\n      return;\n    }\n    if (!phone) {\n      displayNotification(\n        NotificationType.ERROR,\n        'No phone number was given.'\n      );\n      return;\n    }\n    if (existingPerson && phone === existingPerson.phone) {\n      displayNotification(\n        NotificationType.ERROR,\n        `${name} is already in the phonebook.`\n      );\n      setNewName('');\n      return;\n    } else if (existingPerson) {\n      const confirmUpdate = window.confirm(`${existingPerson.name} already exists. Replace phone number?`);\n      if (confirmUpdate) {\n        const editedPerson = {\n          ...existingPerson,\n          phone: phone\n        };\n        updatePerson(editedPerson);\n      } else {\n        displayNotification(\n          NotificationType.INFO,\n          'No update was made.'\n        );\n      }\n    } else {\n      const newPerson = {\n        name: name,\n        phone: phone\n      };\n      addPerson(newPerson);\n    }\n    setNewName('');\n    setNewPhone('');\n  };\n\n  const handleDeletePerson = (person) => {\n    return (() => {\n      const confirmDelete = window.confirm(`Delete ${person.name}?`);\n      if (confirmDelete) {\n        const removablePerson = {\n          ...person\n        };\n        deletePerson(removablePerson);\n      } else {\n        displayNotification(\n          NotificationType.INFO,\n          'No person was deleted.'\n        );\n      }\n    });\n  };\n\n  const changeName = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const changePhone = (event) => {\n    setNewPhone(event.target.value);\n  };\n\n  const changeFilter = (event) => {\n    setNewFilter(event.target.value);\n  };\n  \n  return (\n    <div>\n        <h2>Phonebook</h2>\n        <Notification notification={notification} />\n        <Filter filter={filter} changeFilter={changeFilter} />\n        <h3>add new contact</h3>\n        <PersonForm\n          handleAddPerson={handleAddPerson}\n          newName={newName}\n          changeName={changeName}\n          newPhone={newPhone}\n          changePhone={changePhone} />\n        <h2>Numbers</h2>\n        <Persons \n          filter={filter} \n          persons={persons} \n          handleDeletePerson={handleDeletePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}